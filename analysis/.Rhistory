```{r}
plot(p$prop.vowels, p$inventorySize)
cor.test(p$prop.vowels, p$inventorySize)
```
# Mixed effects models
We run mixed effects models predicting the number proportion of vowels to consonants (`prop.vowels.scaled`). We start by building a null model with only random effects for language family (`Family`) and geographic area (`autotyp.area`) and random slopes for humidity (`specH.mean.center`).  Then we add fixed effects for the inventory size (`inventorySize`), the humidity and the quadratic term of humidity (`specH.mean.center2`).
```{r}
m0 = lmer(prop.vowels.scaled ~ 1 +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m1 = lmer(prop.vowels.scaled ~ 1 +
inventorySize +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m2 = lmer(prop.vowels.scaled ~
specH.mean.center +
inventorySize +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m3 = lmer(prop.vowels.scaled ~
inventorySize +
specH.mean.center +
specH.mean.center2 +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
```
Test the contribution of humidity:
```{r}
anova(m0,m1,m2,m3)
summary(m2)
getMEText(anova(m1,m2), "main effect of humidity",summary(m2)$coef['specH.mean.center',]
)
getMEText(anova(m1,m2), "main effect of humidity",summary(m2)$coef['specH.mean.center',])
m4 = lmer(prop.vowels.scaled ~
inventorySize *
specH.mean.center +
specH.mean.center2 +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
summary(m4)
anova(m3,4)
anova(m3,m4)
sjp.int(m4)
summary(m4)
---
title: "Vowels and humidity: PHOIBLE replication"
output: pdf_document
---
```{r warning=F, message=F}
library(lme4)
library(sjPlot)
library(ggplot2)
library(caret)
library(car)
library(MCMCglmm)
```
```{r echo=F, eval=F}
setwd("~/Documents/MPI/ClimateAndLanguage/PHOIBLE_Replication/analysis/")
```
# Load data
The PHOIBLE database contains data for 1667 varieites with unique glottolog codes.  There are multiple sources for some languages.  PHOIBLE suggests a 'trump' source for each of these cases, which we select here.
```{r}
p = read.csv("../data/phoibleVowelsAndHumidty.csv")
p = p[complete.cases(p[,
c("Family",'autotyp.area',
'specH.mean')]),]
p = p[p$Trump==1,]
```
There are now `r nrow(p)` datapoints.
Transform, scale and center the data.  The proportion of vowels to consonants is ratio in theory, but in practice the values are constrained below 1.  In any case, the mdoel estimates differ very little using a log transformation or a simple scaling.
```{r}
pp = preProcess(p[,c('Tones','specH.mean')], method="BoxCox")
p$specH.mean.center = bcPower(p$specH.mean, lambda = pp$bc$specH.mean$lambda)
p$specH.mean.center = scale(p$specH.mean.center)
hist(p$specH.mean.center)
p$prop.vowels = p$Vowels/(p$Consonants + p$Vowels)
p$prop.vowels.scaled = scale(p$prop.vowels)
#p$prop.vowels.scaled = log(p$prop.vowels)
#p$prop.vowels.scaled = scale(p$prop.vowels.scaled)
p$inventorySize = p$Consonants + p$Vowels
p$inventorySize = scale(p$inventorySize)
hist(p$prop.vowels.scaled)
```
# Plots
Plot the raw data:
```{r}
gx = ggplot(p, aes(x=prop.vowels, y=specH.mean)) +
geom_point() +stat_smooth() +
xlab("Proportion of vowels") +
ylab("Specific Humidity")
gx
# Write to file
pdf("../results/PropVowels_SpecH.pdf", width=4, height=4)
gx
dev.off()
```
There is a weak negative correlation between proportion of vowels and total inventory size:
```{r}
plot(p$prop.vowels, p$inventorySize)
cor.test(p$prop.vowels, p$inventorySize)
```
# Mixed effects models
We run mixed effects models predicting the number proportion of vowels to consonants (`prop.vowels.scaled`). We start by building a null model with only random effects for language family (`Family`) and geographic area (`autotyp.area`) and random slopes for humidity (`specH.mean.center`).  Then we add fixed effects for the inventory size (`inventorySize`), the humidity and the interaction between the two.
```{r}
m0 = lmer(prop.vowels.scaled ~ 1 +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m1 = lmer(prop.vowels.scaled ~ 1 +
inventorySize +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m2 = lmer(prop.vowels.scaled ~
specH.mean.center +
inventorySize +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m3 = lmer(prop.vowels.scaled ~
inventorySize *
specH.mean.center +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
```
Test the contribution of humidity:
```{r}
anova(m0,m1,m2,m3)
summary(m3)
x = sjp.lmer(m3,'fe.slope',
vars=c("specH.mean.center"),
show.scatter = T, show.ci = T,
prnt.plot = F)
x$plot.list[[1]]$data$x =
p[complete.cases(
p[,c("specH.mean.center",
'prop.vowels.scaled','Family',
'autotyp.area')]),]$specH.mean
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
mx = x$plot.list[[1]] +
xlab("Specific Humidity")+
ylab("Vowel Index")
mx
sjp.int(m3)
sjp.int(m3, show.ci = T, show.values = T)
sjp.int(m3, show.ci = T, show.scatter=T)
x = sjp.int(m3, show.ci = T, prnt.plot = F)
x$plot.list[[1]]$data$x
x$plot.list[[1]]$data
head(x$plot.list[[1]]$data$x =
p[complete.cases(
p[,c("specH.mean.center",
'prop.vowels.scaled','Family',
'autotyp.area')]),]$specH.mean
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center'))
head(x$plot.list[[1]]$data)
mx
x = sjp.lmer(m3,'fe.slope',
vars=c("specH.mean.center"),
show.scatter = T, show.ci = T,
prnt.plot = F)
head(x$plot.list[[1]]$data)
x = sjp.int(m3, show.ci = T, prnt.plot = F)
head(x$plot.list[[1]]$data)
p$prop.vowels.scaled
attr(p$prop.vowels.scaled,"scaled:scale")
attr(p$prop.vowels.scaled,"scaled:scale")
p$specH.mean.center
pp$bc$specH.mean$lambda
bcPower(1,lambda = pp$bc$specH.mean$lambda)
bcPower(2,lambda = pp$bc$specH.mean$lambda)
bcPower(3,lambda = pp$bc$specH.mean$lambda)
1^2
pp$bc$specH.mean$lambda
plot(1:20, bcPower(1:20,lambda = pp$bc$specH.mean$lambda))
20^2
?bcPower
pp
1^(1/pp$bc$specH.mean$lambda)
2^(1/pp$bc$specH.mean$lambda)
200^(1/pp$bc$specH.mean$lambda)
bcPower(20,pp$bc$specH.mean$lambda)
bcPower(20,pp$bc$specH.mean$lambda)^(1/pp$bc$specH.mean$lambda)
bcPower
?"sqrt"
p$specH.mean.center = bcPower(p$specH.mean, lambda = h.lambda)
pp = preProcess(p[,c('Tones','specH.mean')], method="BoxCox")
h.lambda = pp$bc$specH.mean$lambda
p$specH.mean.center = bcPower(p$specH.mean, lambda = h.lambda)
X = p$specH.mean.center
sqrt((X*h.lambda) + 1,h.lamda)
sqrt((X*h.lambda) + 1,h.lambda)
sqrt((X*h.lambda) + 1)
plot(sqrt((X*h.lambda) + 1), p$specH.mean)
478438^(1/2)
sqrt(478438)
((X*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data
head(x$plot.list[[1]]$data)
x = sjp.int(m3, show.ci = T, prnt.plot = F)
x$plot.list[[1]]$data$x =
x$plot.list[[1]]$data$x*
attr(p$specH.mean.center,"scaled:scale") +
attr(p$specH.mean.center,"scaled:center")
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.low =
x$plot.list[[1]]$data$conf.low*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.high =
x$plot.list[[1]]$data$conf.high*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
# invert the box-cox transformation
x$plot.list[[1]]$data$y =
((x$plot.list[[1]]$data$y*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.low =
((x$plot.list[[1]]$data$conf.low*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.high =
((x$plot.list[[1]]$data$conf.high*h.lambda) + 1)^(1/h.lambda)
x
x$plot.list[[1]]$scales
x$plot.list[[1]]$scales()
x$plot.list[[1]]$coordinates
x$plot.list[[1]]$coordinates$limits
x$plot.list[[1]]$coordinates$limits$x = range(x$plot.list[[1]]$data$x)
x$plot.list[[1]]$coordinates$limits$y = range(x$plot.list[[1]]$data$y)
x
hist(x$plot.list[[1]]$data$y)
x = sjp.int(m3, show.ci = T, prnt.plot = F)
hist(x$plot.list[[1]]$data$y)
x
x = sjp.int(m3, show.ci = T, prnt.plot = F)
x
x[[1]]
summary(m3)
sjp.int(m3, show.ci = T)
sjp.int(m3, show.ci = T)
rm(list=ls())
---
title: "Vowels and humidity: PHOIBLE replication"
output: pdf_document
---
```{r warning=F, message=F}
library(lme4)
library(sjPlot)
library(ggplot2)
library(caret)
library(car)
library(MCMCglmm)
```
```{r echo=F, eval=F}
setwd("~/Documents/MPI/ClimateAndLanguage/PHOIBLE_Replication/analysis/")
```
# Load data
The PHOIBLE database contains data for 1667 varieites with unique glottolog codes.  There are multiple sources for some languages.  PHOIBLE suggests a 'trump' source for each of these cases, which we select here.
```{r}
p = read.csv("../data/phoibleVowelsAndHumidty.csv")
p = p[complete.cases(p[,
c("Family",'autotyp.area',
'specH.mean')]),]
p = p[p$Trump==1,]
```
There are now `r nrow(p)` datapoints.
Transform, scale and center the data.  The proportion of vowels to consonants is ratio in theory, but in practice the values are constrained below 1.  In any case, the mdoel estimates differ very little using a log transformation or a simple scaling.
```{r}
pp = preProcess(p[,c('Tones','specH.mean')], method="BoxCox")
h.lambda = pp$bc$specH.mean$lambda
p$specH.mean.center = bcPower(p$specH.mean, lambda = h.lambda)
p$specH.mean.center = scale(p$specH.mean.center)
hist(p$specH.mean.center)
p$prop.vowels = p$Vowels/(p$Consonants + p$Vowels)
p$prop.vowels.scaled = scale(p$prop.vowels)
p$inventorySize = p$Consonants + p$Vowels
p$inventorySize = scale(p$inventorySize)
hist(p$prop.vowels.scaled)
```
# Plots
Plot the raw data:
```{r}
gx = ggplot(p, aes(x=prop.vowels, y=specH.mean)) +
geom_point() +stat_smooth() +
xlab("Proportion of vowels") +
ylab("Specific Humidity")
gx
# Write to file
pdf("../results/PropVowels_SpecH.pdf", width=4, height=4)
gx
dev.off()
```
There is a weak negative correlation between proportion of vowels and total inventory size:
```{r}
plot(p$prop.vowels, p$inventorySize)
cor.test(p$prop.vowels, p$inventorySize)
```
# Mixed effects models
We run mixed effects models predicting the number proportion of vowels to consonants (`prop.vowels.scaled`). We start by building a null model with only random effects for language family (`Family`) and geographic area (`autotyp.area`) and random slopes for humidity (`specH.mean.center`).  Then we add fixed effects for the inventory size (`inventorySize`), the humidity and the interaction between the two.
```{r}
m0 = lmer(prop.vowels.scaled ~ 1 +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m1 = lmer(prop.vowels.scaled ~ 1 +
inventorySize +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m2 = lmer(prop.vowels.scaled ~
specH.mean.center +
inventorySize +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
m3 = lmer(prop.vowels.scaled ~
inventorySize *
specH.mean.center +
(1+specH.mean.center|Family) +
(1+specH.mean.center|autotyp.area),
data=p)
```
Test the contribution of humidity:
```{r}
anova(m0,m1,m2,m3)
summary(m3)
```
`r getMEText(anova(m1,m2), "main effect of humidity",summary(m2)$coef['specH.mean.center',])`
Plot the model estimates:
```{r}
x = sjp.lmer(m3,'fe.slope',
vars=c("specH.mean.center"),
show.scatter = T, show.ci = T,
prnt.plot = F)
# Rescale humidity back to real values
x$plot.list[[1]]$data$x =
p[complete.cases(
p[,c("specH.mean.center",
'prop.vowels.scaled','Family',
'autotyp.area')]),]$specH.mean
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
mx = x$plot.list[[1]] +
xlab("Specific Humidity")+
ylab("Vowel Index")
mx
# write to file
pdf("../results/PropVowels_SpecH_Estimates.pdf", width=4, height=4)
mx
dev.off()
```
Plot the interaction:
```{r}
x = sjp.int(m3, show.ci = T, prnt.plot = F)
x
x$plot.list[[1]]$data$x =
x$plot.list[[1]]$data$x*
attr(p$specH.mean.center,"scaled:scale") +
attr(p$specH.mean.center,"scaled:center")
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.low =
x$plot.list[[1]]$data$conf.low*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.high =
x$plot.list[[1]]$data$conf.high*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
# invert the box-cox transformation
x$plot.list[[1]]$data$y =
((x$plot.list[[1]]$data$y*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.low =
((x$plot.list[[1]]$data$conf.low*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.high =
((x$plot.list[[1]]$data$conf.high*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$coordinates$limits$x = range(x$plot.list[[1]]$data$x)
x$plot.list[[1]]$coordinates$limits$y = range(x$plot.list[[1]]$data$y)
x
x$plot.list[[1]]$data$x =
x$plot.list[[1]]$data$x*
attr(p$specH.mean.center,"scaled:scale") +
attr(p$specH.mean.center,"scaled:center")
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.low =
x$plot.list[[1]]$data$conf.low*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.high =
x$plot.list[[1]]$data$conf.high*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
# invert the box-cox transformation
x$plot.list[[1]]$data$y =
((x$plot.list[[1]]$data$y*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.low =
((x$plot.list[[1]]$data$conf.low*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.high =
((x$plot.list[[1]]$data$conf.high*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$coordinates$limits$x = range(x$plot.list[[1]]$data$x)
x$plot.list[[1]]$coordinates$limits$y = range(x$plot.list[[1]]$data$y)
x
x = sjp.int(m3, show.ci = T, prnt.plot = F)
x
x$plot.list[[1]]$data$x =
x$plot.list[[1]]$data$x*
attr(p$specH.mean.center,"scaled:scale") +
attr(p$specH.mean.center,"scaled:center")
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.low =
x$plot.list[[1]]$data$conf.low*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.high =
x$plot.list[[1]]$data$conf.high*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
# invert the box-cox transformation
x$plot.list[[1]]$data$y =
((x$plot.list[[1]]$data$y*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.low =
((x$plot.list[[1]]$data$conf.low*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$data$conf.high =
((x$plot.list[[1]]$data$conf.high*h.lambda) + 1)^(1/h.lambda)
x$plot.list[[1]]$coordinates$limits$x = range(x$plot.list[[1]]$data$x)
x$plot.list[[1]]$coordinates$limits$y = range(x$plot.list[[1]]$data$y)
x
x = sjp.int(m3, show.ci = T, prnt.plot = F)
hist(x$plot.list[[1]]$data$x)
hist(x$plot.list[[1]]$data$x*
attr(p$specH.mean.center,"scaled:scale") +
attr(p$specH.mean.center,"scaled:center"))
x = sjp.int(m3, show.ci = T, prnt.plot = F)
x$plot.list[[1]]$data$x =
x$plot.list[[1]]$data$x*
attr(p$specH.mean.center,"scaled:scale") +
attr(p$specH.mean.center,"scaled:center")
x$plot.list[[1]]$data$x =
((x$plot.list[[1]]$data$x*h.lambda) + 1)^(1/h.lambda)
# rescale proportion of vowels to real values
x$plot.list[[1]]$data$y =
x$plot.list[[1]]$data$y*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.low =
x$plot.list[[1]]$data$conf.low*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x$plot.list[[1]]$data$conf.high =
x$plot.list[[1]]$data$conf.high*
attr(p$prop.vowels.scaled,'scaled:scale') +
attr(p$prop.vowels.scaled, 'scaled:center')
x
x$plot.list[[1]]$coordinates$limits$x = range(x$plot.list[[1]]$data$x)
x$plot.list[[1]]$coordinates$limits$y = range(x$plot.list[[1]]$data$y)
x
hist(p$inventorySize)
p$inventorySize.cat = cut(p$inventorySize, quantile(p$inventorySize,seq(0,1,length.out = 4)), include.lowest = T)
p$inventorySize.cat = cut(p$inventorySize, quantile(p$inventorySize,seq(0,1,length.out = 4)), include.lowest = T)
gx = ggplot(p, aes(x=prop.vowels, y=specH.mean,
colour=inventorySize.cat)) +
geom_point() +stat_smooth() +
xlab("Proportion of vowels") +
ylab("Specific Humidity")
gx
p$inventorySize.cat = cut(p$inventorySize, quantile(p$inventorySize,seq(0,1,length.out = 3)), include.lowest = T)
gx = ggplot(p, aes(x=prop.vowels, y=specH.mean,
colour=inventorySize.cat)) +
geom_point() +stat_smooth() +
xlab("Proportion of vowels") +
ylab("Specific Humidity")
gx
hist(p$Consonants + p$Vowels)
quantile(p$inventorySize,seq(0,1,length.out = 3))
hist(p$inventorySize)
p$inventorySize.cat = cut(p$inventorySize, quantile(p$inventorySize,seq(0,1,length.out = 3)), include.lowest = T)
gx = ggplot(p, aes(x=prop.vowels, y=specH.mean,
colour=inventorySize.cat)) +
geom_point() +stat_smooth() +
xlab("Proportion of vowels") +
ylab("Specific Humidity")
gx
